from collections import defaultdict, deque, Counter
# d = deque()
# d.append(5)
# x = d.popleft()
import re
# m = re.match(r"(\w+) (\w+)", "Isaac Newton, physicist") 
# # or re.search
# >>> m.group(0)       # The entire match
# 'Isaac Newton'
# >>> m.group(1)       # The first parenthesized subgroup.
# 'Isaac'
# >>> m.group(2)       # The second parenthesized subgroup.
# 'Newton'
# >>> m.group(1, 2)    # Multiple arguments give us a tuple.
# ('Isaac', 'Newton')
from heapq import heappush, heappop
# >>> heap = []
# >>> data = [1, 3, 5, 7, 9, 2, 4, 6, 8, 0]
# >>> for item in data:
# ...     heappush(heap, item)
# heap[0] is the smallest item
import string
# string.ascii_lowercase == 'abcde...'
# string.ascii_uppercase == 'ABCDE...'
from functools import lru_cache
# @lru_cache(maxsize=None)

import numpy as np

import sys
sys.setrecursionlimit(100000)

def get_ints(s):
    return list(map(int, re.findall(r"-?\d+", s)))  # copied from mcpower from mserrano on betaveros' recommendation
dirs = [(0,1), (1,0), (0,-1), (-1,0)]
octs = [(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1),(-1,0),(-1,1)]
def is_grid_valid(n,m, r,c,):
    return (0<=r<n) and (0<=c<m)

def rotate(arr, xyz, up):
    """xyz is 0,1,2,3,4,5 for axes swaps. up is 0,1,2,3 for rotation"""
    return arr * xyz * up

axes_swaps = [
    np.array([[1,0,0],[0,1,0],[0,0,1]]),
    np.array([[0,1,0],[0,0,1],[1,0,0]]),
    np.array([[0,0,1],[1,0,0],[0,1,0]]),
]
rotations = [
    np.array([[1,0,0],[0,1,0],[0,0,1]]),
    np.array([[-1,0,0],[0,-1,0],[0,0,1]]),
    np.array([[-1,0,0],[0,1,0],[0,0,-1]]),
    np.array([[1,0,0],[0,-1,0],[0,0,-1]]),
]
idk = [
    np.array([[1,0,0],[0,1,0],[0,0,1]]),
    np.array([[0,0,-1],[0,-1,0],[-1,0,0]])
]

all_rotations = []
for swap in axes_swaps:
    for rotation in rotations:
        for id in idk:
            all_rotations.append(swap @ rotation @ id)
for ar in all_rotations:
    print(ar)
print(len([str(x) for x in all_rotations]))
# def all_rotates(arr):
#     for swap in axes_swaps:
#         for rotation in rotations:
#             yield swap @ rotation @ arr

def compare(a, b):
    # print(f'{a=}')
    # print(f'{b=}')
    atuples = set(tuple(x) for x in a)
    # print(atuples, b)
    for pt1 in a:
        for pt2 in b:
            offset = tuple(x-y for x,y in zip(pt1,pt2))
            # print(offset)
            candidate = [tuple(x+y for x,y in zip(pt, offset)) for pt in b]
            # print(f'{a=}\n{candidate=}')
            # print(tuple(candidate[0]), atuples)
            # if tuple(offset) == (1105, -1205, 1229):
            #     print(f'{[c for c in candidate if tuple(c) in atuples]=}')
            #     print(f'{sorted(atuples)=}')
            #     print(f'{sorted(tuple(x) for x in candidate)=}')
            if len([c for c in candidate if tuple(c) in atuples]) >= 12:
                print('woohoo!')
                return offset, candidate
    return None, None

cache = dict()
def get_matrices(x):
    if str(x) in cache:
        return cache[str(x)]
    print('not using cache')
    ans = []
    for rotation in all_rotations:
        ans.append([tuple(rotation @ np.array(b)) for b in inp])
    cache[str(x)] = ans
    return ans

if True:
    ans = 0
    inps = []
    inp = []
    while True:
        try:
            x = input()
            if x.strip() == '':
                inps.append(inp)
            elif x.startswith('---'):
                inp = []
            else:
                inp.append(np.array(get_ints(x)))
            
        except EOFError:
            break
    for inp in inps:
        print(inp)
    grid = set(tuple(x) for x in inps[0])
    # print(f'{grid=}')
    if True:
        print('inps', inps)
        inps = [set(tuple(x) for x in inp) for inp in inps]
        print('inps', inps)
        while len(inps) > 1:
            for i in range(len(inps)):
                print(i)
                for j in range(i+1, len(inps)):
                    for matrix in get_matrices(inps[j]):
                        # print(inps[i], matrix)
                        offset, candidate = compare(inps[i], matrix)
                        if offset is None:
                            continue
    else:
        offsets = []
        inps = inps[1:]
        while len(inps) > 0:
            for i in range(len(inps)):
                inp = inps[0]
                for matrix in get_matrices(inp):
                    offset, candidate = compare(grid, matrix)
                    if offset is not None:
                        break
                else:
                    inps = inps[1:] + [inps[0]]
                    continue
                print('we found a match!')
                offsets.append(offset)
                grid |= set(tuple(x) for x in candidate)
                inps.pop(0)
                break
            else:
                print('failure')
                print(sorted(list(grid)))
                print(inps)
                raise ValueError('failed')
    print(grid)
    print(offsets)
    for o1 in offsets:
        for o2 in offsets:
            x = abs(o1[0] - o2[0]) + abs(o1[1] - o2[1]) + abs(o1[2] - o2[2])
            ans = max(ans, x)
    print(len(grid))
    print(ans)
else:
    # scanners = {(374, -2848, 496), (-1691, 4176, -1761), (1547, 1617, -3024), (793, 523, 765), (-2088, -299, -592), (1030, 2542, 1231), (-3042, 3110, 1561), (-4373, 2118, -491), (1561, 2876, 1820), (-3028, 2960, -1795), (-3135, 860, -1671), (-2015, 498, 1999), (1606, 545, 830), (-1965, 4342, -810), (1147, 1196, -2318), (-2988, 4223, 590), (-1901, -1917, 598), (562, 3025, 3025), (515, 5271, 1757), (552, 1989, -3080), (1569, 1614, -2953), (-1673, 4151, -2810), (265, -2822, 608), (-1778, 5486, -1841), (-682, 5315, 670), (-420, 416, 1774), (1624, 538, -3119), (654, 1753, -1605), (392, -638, -524), (1666, -503, -2945), (1543, 5231, 658), (-3277, 5317, -4209), (-127, 159, -103), (1039, 1275, -104), (293, 4484, 2006), (-652, 3351, 416), (1454, 5734, 1817), (-1817, 5393, -639), (-1806, -257, 576), (690, -1834, -840), (2818, 669, -518), (-1946, 5541, -3006), (-2025, 1709, -2770), (-2867, 2063, -606), (-1782, 2901, 1755), (-25, -1193, -10), (1061, 2407, 59), (-1837, 1905, 557), (-1795, 666, -590), (-3180, 554, -649), (1695, 1929, 2027), (-1826, 1815, -1953), (-2912, 1934, -1985), (-672, 5369, 703), (-2092, 4391, 686), (-932, -413, -581), (-1707, 2927, -738), (570, 601, -2905), (-3024, 3094, -2955), (-2578, 3783, 1106), (1046, 2583, 2455), (-3073, 4164, -460), (595, 3108, 1734), (280, 3263, -433), (-593, -2851, 476), (-2523, 3703, -2425), (-4417, 2015, -1878), (-2486, 2567, -1113), (2322, 2455, 2484), (1133, 4797, 1286), (-3022, 3117, -2893), (-1795, 649, -549), (-961, 2940, -487), (-2138, 1779, -2783), (1583, -484, -1635), (-748, -781, 588), (501, 3047, 1758), (-1275, 3676, 53), (-1763, 2943, 796), (2997, 619, -1642), (-4423, 3139, -708), (-640, 1798, -1918), (-885, -408, -561), (1214, 161, 31), (1024, 92, -2441), (13, 1284, -90), (453, 2808, -1587), (-1776, 2876, -826), (3012, 3147, 2948), (-3109, 3361, 679), (622, 3032, 2988), (619, 5715, 475), (-867, -1723, -710), (3161, 690, -1693), (1842, 2188, 769), (-1885, 1797, -793), (-2008, 4070, -3950), (-1659, -1557, -699), (-2180, 4285, 752), (-1930, 5674, -4323), (615, 499, 683), (-3007, 3103, 1733), (-3252, 4242, -1837), (2624, 2011, -765), (-2507, 3595, -82), (-2444, 3601, 1292), (-3072, 3309, 824), (270, -648, -624), (-1770, 4235, -2728), (-781, 1943, -842), (1659, 1935, 1872), (1608, 5636, 1861), (-155, 2590, -1218), (-913, -1528, -763), (-734, 2065, 1776), (-3268, 4139, -514), (-1738, 2996, -1562), (453, 4442, 848), (418, -661, -1785), (3097, 3149, 2745), (1512, 536, -3034), (1782, 2008, -750), (-546, -1590, 590), (2406, 2532, 1155), (1506, 662, -1897), (1691, 1744, 3086), (-3112, 5425, 532), (477, 1762, 3154), (1676, 4154, 760), (443, 5364, 1881), (-1662, 4203, -1845), (-3267, 5348, -4027), (-2951, 1923, -617), (2858, 2059, 2832), (-3046, 4405, -4416), (620, 476, 721), (541, -402, -2949), (687, 1598, -1678), (519, 5275, -607), (-647, -1638, 653), (1656, 5430, -847), (2721, 1997, 2826), (-3130, 5337, -4175), (-577, 1828, -1869), (-4483, 3138, -649), (1786, 3109, 2982), (1425, 614, 865), (1021, 4914, 1206), (-2477, 2411, -2376), (-869, 2179, 389), (221, 4303, 1962), (-4219, 2976, -2037), (-2524, 1367, -1180), (-47, 2501, -59), (622, 5612, 644), (-3194, 4318, -4391), (7, 45, 10), (1785, 2115, 748), (-3017, 5510, 518), (-1825, -3114, 489), (-1938, 1732, -650), (-2177, -396, -698), (2220, 2568, 2382), (-1984, 4167, -4015), (1582, 526, -564), (1839, 1872, -821), (1684, 3312, -588), (-1754, 5447, -818), (-2089, 1680, -2826), (1038, 1359, -2393), (1656, 5422, -584), (3034, 1670, 1867), (-2926, 5568, -2917), (-396, 937, -868), (718, 1999, -374), (608, -1731, -847), (-2812, 1787, -2964), (1215, -4, -2464), (1751, 3195, 3044), (-965, 2962, -448), (316, 1724, 1775), (-1691, 4273, 1818), (-3214, 600, -552), (558, -2937, -512), (-1805, 1704, -1936), (797, 944, -790), (-1253, 1348, -26), (-4448, 2110, -1765), (378, 3193, 529), (-3054, 4284, -2928), (444, -1549, 590), (266, -564, 461), (2828, 656, -656), (-3255, 4200, -529), (1908, -299, -470), (-4206, 3080, -2053), (-1831, 2009, 2013), (-1862, 2876, 1858), (-582, -2830, 571), (1168, 1378, 45), (-2464, 2452, -1286), (-857, 2132, 1690), (1571, 2102, -1799), (-2103, 3104, -3014), (539, 1994, -3113), (409, -2930, 651), (-2918, 5490, -2843), (-453, 4231, -376), (413, -590, -1804), (274, -501, 402), (1798, 2047, -1798), (495, 2798, -1614), (1493, -306, 642), (-2026, 4188, -872), (1649, 408, -600), (-1961, 5703, -4254), (-1918, 5605, -3092), (1660, 4285, 766), (1106, 73, -90), (-1972, -3121, -417), (1156, 2467, 2378), (-3242, 4400, -4372), (-2089, 3089, -3077), (582, 1802, 776), (-2526, 4824, -3591), (-1188, -2215, 1), (-602, 3238, 544), (1675, -327, -2856), (-505, -1638, 719), (-2463, 4814, -2441), (-673, 894, 662), (1558, 3102, 544), (-636, 3387, 617), (-2981, 1825, -3000), (1513, 3021, 516), (-859, 2149, 1787), (-3031, 1785, -2929), (426, 4137, -398), (-3300, 5471, -452), (1448, 469, -603), (-1962, -1825, 488), (-1203, 2412, -64), (-1183, -1154, 35), (-453, 892, -689), (1505, 671, 867), (-563, 5550, -758), (-723, 3052, -1707), (-1742, 2894, -853), (-4390, 3092, -630), (-904, 2124, 298), (1162, 4884, 85), (-4316, 2161, -406), (-2980, 2018, -562), (-1974, 4226, -859), (-2578, 2521, -2469), (338, -641, -737), (1184, 1392, -1219), (1594, 4252, 1903), (-1791, 4368, 1793), (-647, 775, 719), (636, -2821, -443), (1475, 5351, 693), (-403, 4181, -380), (693, 1666, -1777), (-3125, 2911, -1850), (1859, 2023, 675), (524, -497, -2844), (-3118, 519, -528), (648, -2820, -468), (3128, 3224, 465), (1890, 3313, -622), (427, 4355, -430), (-1889, -1851, 558), (256, 533, -1643), (1606, -291, -2921), (504, 3213, -419), (3068, 2053, -1812), (-2462, 3754, 41), (-2386, 1306, -1288), (1709, 4267, 648), (1719, 3261, -566), (1676, 2819, 1791), (-177, -2299, 91), (-1771, 900, 565), (1799, 3300, 3070), (-3045, 4335, 1594), (2640, 2125, -652), (-3774, 2582, -1207), (-1365, -2389, 72), (1026, 4933, -87), (-782, -721, 695), (-1675, 4348, -2789), (-451, 502, 1740), (576, 1859, 801), (425, 1663, 3090), (-465, -3079, -401), (-1730, 2970, -1515), (-3244, 5451, -517), (-3198, 3165, -2960), (1755, 1936, 3080), (1523, 5361, 790), (2776, 1930, 434), (-1237, 2444, -1134), (1519, 1771, -3032), (-3165, 774, -1770), (-407, 4332, -319), (-139, -1077, -100), (-1225, 1250, 1214), (-815, 2166, 343), (-3102, 4402, 1619), (-1800, 5363, 517), (3022, 2047, -1814), (-1896, 739, 570), (-870, -1474, -736), (-3015, 4264, -2935), (-2874, 1755, -1987), (-450, 5613, -879), (558, 953, -776), (-1262, 2587, 89), (-1617, 5482, -1863), (-3032, 5342, 514), (-1618, 5448, -674), (-389, 915, -762), (3007, 3197, 1781), (-1959, 5575, -3158), (-3129, 717, -1752), (-2411, 1208, -1109), (-1829, 626, -2069), (-2062, 2979, -3018), (-2908, 5269, -1884), (2272, 2407, 1232), (2904, 3118, 1855), (3082, 3021, 2872), (1536, 4362, 1788), (2694, 1920, 454), (2373, 1373, -1233), (-1662, 5556, -1760), (-1860, 4290, 1711), (1485, -226, 546), (1559, 2920, 1808), (1108, 1202, -1270), (-1995, -3109, -456), (1487, 4367, 1891), (-1715, -3203, 523), (-2568, 4977, -2372), (363, 3071, 1737), (434, 3159, 722), (-2437, 4982, -77), (-406, -2964, -388), (2944, 1722, 1811), (636, 3041, 3112), (1618, 4254, -526), (631, -1755, -860), (1473, -516, -1680), (-1842, 5253, 592), (3050, 2057, -1696), (2235, 1264, -1125), (1213, 2492, 1140), (-1900, 5364, 651), (-1727, 2143, 1956), (-514, 440, 1622), (3083, 3231, 540), (-567, -2967, -445), (-871, 2947, -1750), (-3216, 4199, -1861), (512, 3180, 612), (3131, 1684, 1814), (-1786, 1903, 503), (1679, 1720, 3080), (1197, 4988, 1137), (-643, 5212, 630), (634, 727, -2903), (1631, 630, -1968), (467, 1675, 1681), (2661, 1955, 578), (1770, -277, -429), (580, 5308, -695), (-2903, 1776, -1948), (1592, -445, -1634), (-3014, 3290, 670), (470, 2091, -3153), (-4509, 2057, -1892), (-729, 775, 740), (1168, 2532, -56), (-3200, 2966, -724), (-661, 1930, -805), (-974, 2905, -319), (-1822, 2958, 1687), (654, 1844, 741), (552, 4479, 842), (-4189, 3060, -2051), (-1782, 537, -2020), (625, 1887, -431), (-507, 5446, -851), (632, 2130, -440), (-4433, 2041, -392), (331, 1744, 3165), (-3033, 4455, 1627), (596, 5613, 479), (-3310, 3018, -794), (-2062, -3046, -338), (-1974, 1872, 530), (748, 920, -718), (-1840, 1688, -1848), (-1723, 696, -1997), (1647, 5472, -760), (-1364, 2557, -1230), (-2112, 5716, -4384), (406, -419, -2844), (-42, 4943, -87), (-512, 4353, 393), (-2422, 4985, -3653), (-36, -2303, -93), (1596, 4402, -402), (-1666, -1502, -805), (543, 673, -2846), (1676, 1946, 1878), (-3162, 3119, 1701), (-3075, 5265, -1838), (-3591, 2466, -1221), (1436, -351, 507), (254, -682, 345), (-960, -476, -523), (-2411, 4843, 71), (-1685, 666, -587), (1686, 2030, -1772), (-1737, 2005, 2069), (-2891, 5552, -2914), (-731, 1865, -1784), (300, 3273, -435), (-1953, -228, 535), (-2393, 4989, -2497), (401, 4334, -397), (-1852, 893, 579), (229, 564, -1812), (496, -510, -1733), (-1662, -1548, -674), (-2177, -303, -548), (318, 1762, 1681), (-525, 4322, 529), (256, 4415, 1983), (297, 565, -1747), (1587, 521, -1897), (2703, 2042, 2884), (459, 2795, -1848), (-1766, -3123, 555), (475, 5306, -783), (-3263, 3001, -788), (-2971, 2990, -1845), (-472, -2913, 482), (-1799, 4126, -1885), (405, 5272, 1925), (1517, 5668, 1819), (3054, 3243, 601), (-1891, 1821, -756), (-608, -779, 712), (616, -1555, 510), (1560, 3064, 516), (1853, -419, -419), (-848, 3110, -1740), (-690, 1963, -869), (-1913, 4194, -3963), (-1960, -210, 634), (3024, 670, -1675), (-2959, 4393, 542), (2664, 2087, -792), (-2975, 4217, -2835), (-1304, 1388, 1100), (1520, 440, -3029), (2939, 578, -596), (1575, 4255, -521), (-1350, -1029, 2), (-1379, 2488, -6), (-2985, 5372, -1837), (-125, 1321, 87), (-1815, 3017, 757), (3025, 3108, 1801), (-2124, 4373, 802), (-1801, 2945, 728), (-3224, 5562, -444), (-507, 4332, 591), (-2989, 4274, 457), (1092, 3609, 1232), (-3089, 4260, -1909), (574, -1434, 552), (1736, 1878, -729), (-1920, 3010, -1570), (7, 2510, -1111), (-1862, 550, 1959), (622, 4543, 861), (-1816, 488, 2061)}
    scanners = {(374, -2848, 496), (1547, 1617, -3024), (-1691, 4176, -1761), (793, 523, 765), (-2088, -299, -592), (1030, 2542, 1231), (-3042, 3110, 1561), (-4373, 2118, -491), (1561, 2876, 1820), (-3028, 2960, -1795), (-3135, 860, -1671), (-2015, 498, 1999), (1606, 545, 830), (1147, 1196, -2318), (552, 1989, -3080), (-1965, 4342, -810), (-1901, -1917, 598), (562, 3025, 3025), (515, 5271, 1757), (-2988, 4223, 590), (1569, 1614, -2953), (-1673, 4151, -2810), (265, -2822, 608), (-1778, 5486, -1841), (1624, 538, -3119), (-420, 416, 1774), (-682, 5315, 670), (654, 1753, -1605), (392, -638, -524), (1666, -503, -2945), (1543, 5231, 658), (-3277, 5317, -4209), (-127, 159, -103), (1039, 1275, -104), (293, 4484, 2006), (-652, 3351, 416), (1454, 5734, 1817), (-1817, 5393, -639), (-1806, -257, 576), (690, -1834, -840), (2818, 669, -518), (-1946, 5541, -3006), (-2025, 1709, -2770), (-2867, 2063, -606), (-1782, 2901, 1755), (-25, -1193, -10), (1061, 2407, 59), (-1837, 1905, 557), (-1795, 666, -590), (-3180, 554, -649), (1695, 1929, 2027), (-1826, 1815, -1953), (-2912, 1934, -1985), (-672, 5369, 703), (-2092, 4391, 686), (-932, -413, -581), (570, 601, -2905), (-1707, 2927, -738), (-3024, 3094, -2955), (-2578, 3783, 1106), (1046, 2583, 2455), (-3073, 4164, -460), (595, 3108, 1734), (280, 3263, -433), (-593, -2851, 476), (-2523, 3703, -2425), (-4417, 2015, -1878), (-2486, 2567, -1113), (2322, 2455, 2484), (1133, 4797, 1286), (-3022, 3117, -2893), (-1795, 649, -549), (-961, 2940, -487), (-2138, 1779, -2783), (1583, -484, -1635), (-748, -781, 588), (501, 3047, 1758), (-1275, 3676, 53), (2997, 619, -1642), (-1763, 2943, 796), (-4423, 3139, -708), (-640, 1798, -1918), (-885, -408, -561), (1214, 161, 31), (-1816, 488, 2061), (1024, 92, -2441), (13, 1284, -90), (453, 2808, -1587), (-1776, 2876, -826), (3012, 3147, 2948), (619, 5715, 475), (622, 3032, 2988), (-3109, 3361, 679), (-867, -1723, -710), (3161, 690, -1693), (1842, 2188, 769), (-1885, 1797, -793), (-2008, 4070, -3950), (-1659, -1557, -699), (-2180, 4285, 752), (-1930, 5674, -4323), (615, 499, 683), (-3007, 3103, 1733), (-3252, 4242, -1837), (2624, 2011, -765), (-2507, 3595, -82), (-2444, 3601, 1292), (-3072, 3309, 824), (270, -648, -624), (-1770, 4235, -2728), (-781, 1943, -842), (1659, 1935, 1872), (1608, 5636, 1861), (-155, 2590, -1218), (-913, -1528, -763), (-734, 2065, 1776), (-3268, 4139, -514), (-1738, 2996, -1562), (453, 4442, 848), (418, -661, -1785), (3097, 3149, 2745), (1512, 536, -3034), (1782, 2008, -750), (-546, -1590, 590), (1506, 662, -1897), (1691, 1744, 3086), (477, 1762, 3154), (443, 5364, 1881), (2406, 2532, 1155), (1676, 4154, 760), (-3112, 5425, 532), (-1662, 4203, -1845), (-3267, 5348, -4027), (-2951, 1923, -617), (2858, 2059, 2832), (-3046, 4405, -4416), (620, 476, 721), (541, -402, -2949), (687, 1598, -1678), (519, 5275, -607), (-647, -1638, 653), (-4483, 3138, -649), (2721, 1997, 2826), (1656, 5430, -847), (-577, 1828, -1869), (-3130, 5337, -4175), (1786, 3109, 2982), (1425, 614, 865), (1021, 4914, 1206), (-2477, 2411, -2376), (-869, 2179, 389), (221, 4303, 1962), (-4219, 2976, -2037), (-2524, 1367, -1180), (-47, 2501, -59), (622, 5612, 644), (-3194, 4318, -4391), (7, 45, 10), (1785, 2115, 748), (-3017, 5510, 518), (-1825, -3114, 489), (-1938, 1732, -650), (-2177, -396, -698), (2220, 2568, 2382), (-1984, 4167, -4015), (1582, 526, -564), (1839, 1872, -821), (1684, 3312, -588), (-1754, 5447, -818), (-2089, 1680, -2826), (1038, 1359, -2393), (1656, 5422, -584), (3034, 1670, 1867), (-2926, 5568, -2917), (-396, 937, -868), (718, 1999, -374), (608, -1731, -847), (1215, -4, -2464), (-2812, 1787, -2964), (1751, 3195, 3044), (-965, 2962, -448), (316, 1724, 1775), (-1691, 4273, 1818), (-3214, 600, -552), (558, -2937, -512), (-1805, 1704, -1936), (-1253, 1348, -26), (-4448, 2110, -1765), (378, 3193, 529), (-3054, 4284, -2928), (444, -1549, 590), (266, -564, 461), (2828, 656, -656), (-3255, 4200, -529), (1908, -299, -470), (-4206, 3080, -2053), (-1831, 2009, 2013), (-1862, 2876, 1858), (-582, -2830, 571), (1168, 1378, 45), (-2464, 2452, -1286), (-857, 2132, 1690), (1571, 2102, -1799), (-2103, 3104, -3014), (539, 1994, -3113), (409, -2930, 651), (-2918, 5490, -2843), (-453, 4231, -376), (413, -590, -1804), (274, -501, 402), (1798, 2047, -1798), (495, 2798, -1614), (1493, -306, 642), (-2026, 4188, -872), (1649, 408, -600), (-1961, 5703, -4254), (1660, 4285, 766), (-1918, 5605, -3092), (1106, 73, -90), (-1972, -3121, -417), (1156, 2467, 2378), (-3242, 4400, -4372), (-2089, 3089, -3077), (582, 1802, 776), (-2526, 4824, -3591), (-1188, -2215, 1), (-602, 3238, 544), (1675, -327, -2856), (-505, -1638, 719), (-2463, 4814, -2441), (-673, 894, 662), (1558, 3102, 544), (-636, 3387, 617), (-2981, 1825, -3000), (1513, 3021, 516), (-859, 2149, 1787), (-3031, 1785, -2929), (426, 4137, -398), (-1962, -1825, 488), (1448, 469, -603), (-1183, -1154, 35), (-1203, 2412, -64), (-3300, 5471, -452), (-453, 892, -689), (1505, 671, 867), (-563, 5550, -758), (-723, 3052, -1707), (-1742, 2894, -853), (-4390, 3092, -630), (-904, 2124, 298), (-4316, 2161, -406), (1162, 4884, 85), (-2980, 2018, -562), (-1974, 4226, -859), (-2578, 2521, -2469), (338, -641, -737), (1184, 1392, -1219), (1594, 4252, 1903), (-1791, 4368, 1793), (-647, 775, 719), (636, -2821, -443), (1475, 5351, 693), (-403, 4181, -380), (693, 1666, -1777), (-3125, 2911, -1850), (1859, 2023, 675), (524, -497, -2844), (-3118, 519, -528), (648, -2820, -468), (3128, 3224, 465), (1890, 3313, -622), (427, 4355, -430), (-1889, -1851, 558), (256, 533, -1643), (1606, -291, -2921), (504, 3213, -419), (3068, 2053, -1812), (-2462, 3754, 41), (-2386, 1306, -1288), (1709, 4267, 648), (1719, 3261, -566), (1676, 2819, 1791), (-177, -2299, 91), (-1771, 900, 565), (1799, 3300, 3070), (-3045, 4335, 1594), (2640, 2125, -652), (-3774, 2582, -1207), (-1365, -2389, 72), (1026, 4933, -87), (-782, -721, 695), (-1675, 4348, -2789), (-451, 502, 1740), (576, 1859, 801), (425, 1663, 3090), (-465, -3079, -401), (1523, 5361, 790), (1755, 1936, 3080), (-1730, 2970, -1515), (-3244, 5451, -517), (-3198, 3165, -2960), (2776, 1930, 434), (1519, 1771, -3032), (-1237, 2444, -1134), (-3165, 774, -1770), (-407, 4332, -319), (-139, -1077, -100), (-1225, 1250, 1214), (-815, 2166, 343), (-3102, 4402, 1619), (-1800, 5363, 517), (3022, 2047, -1814), (-1896, 739, 570), (-870, -1474, -736), (-3015, 4264, -2935), (-2874, 1755, -1987), (-450, 5613, -879), (558, 953, -776), (-1262, 2587, 89), (-1617, 5482, -1863), (-3032, 5342, 514), (-1618, 5448, -674), (-389, 915, -762), (3007, 3197, 1781), (-3129, 717, -1752), (-2411, 1208, -1109), (-1959, 5575, -3158), (-1829, 626, -2069), (-2062, 2979, -3018), (-2908, 5269, -1884), (2272, 2407, 1232), (3082, 3021, 2872), (2904, 3118, 1855), (1536, 4362, 1788), (2694, 1920, 454), (2373, 1373, -1233), (-1860, 4290, 1711), (-1662, 5556, -1760), (1485, -226, 546), (1559, 2920, 1808), (1108, 1202, -1270), (-1995, -3109, -456), (1487, 4367, 1891), (-1715, -3203, 523), (-2568, 4977, -2372), (363, 3071, 1737), (434, 3159, 722), (636, 3041, 3112), (-406, -2964, -388), (2944, 1722, 1811), (1618, 4254, -526), (-2437, 4982, -77), (631, -1755, -860), (1473, -516, -1680), (-1842, 5253, 592), (3050, 2057, -1696), (2235, 1264, -1125), (1213, 2492, 1140), (-1900, 5364, 651), (-1727, 2143, 1956), (-514, 440, 1622), (3083, 3231, 540), (-567, -2967, -445), (1679, 1720, 3080), (-871, 2947, -1750), (512, 3180, 612), (3131, 1684, 1814), (-1786, 1903, 503), (634, 727, -2903), (1197, 4988, 1137), (-643, 5212, 630), (-3216, 4199, -1861), (1631, 630, -1968), (467, 1675, 1681), (2661, 1955, 578), (1770, -277, -429), (580, 5308, -695), (-2903, 1776, -1948), (1592, -445, -1634), (-3014, 3290, 670), (470, 2091, -3153), (-4509, 2057, -1892), (-729, 775, 740), (1168, 2532, -56), (-3200, 2966, -724), (-661, 1930, -805), (-974, 2905, -319), (-1822, 2958, 1687), (654, 1844, 741), (552, 4479, 842), (-4189, 3060, -2051), (-1782, 537, -2020), (625, 1887, -431), (-4433, 2041, -392), (632, 2130, -440), (-507, 5446, -851), (331, 1744, 3165), (-3033, 4455, 1627), (596, 5613, 479), (-3310, 3018, -794), (-2062, -3046, -338), (-1974, 1872, 530), (748, 920, -718), (-1840, 1688, -1848), (-1723, 696, -1997), (1647, 5472, -760), (-1364, 2557, -1230), (-2112, 5716, -4384), (406, -419, -2844), (-42, 4943, -87), (-512, 4353, 393), (-2422, 4985, -3653), (-36, -2303, -93), (543, 673, -2846), (-1666, -1502, -805), (1596, 4402, -402), (1676, 1946, 1878), (-3162, 3119, 1701), (-3591, 2466, -1221), (-3075, 5265, -1838), (1436, -351, 507), (254, -682, 345), (-960, -476, -523), (-2411, 4843, 71), (-1685, 666, -587), (1686, 2030, -1772), (-1737, 2005, 2069), (-2891, 5552, -2914), (-731, 1865, -1784), (300, 3273, -435), (-1953, -228, 535), (401, 4334, -397), (-2393, 4989, -2497), (-1852, 893, 579), (229, 564, -1812), (496, -510, -1733), (-1662, -1548, -674), (-2177, -303, -548), (318, 1762, 1681), (256, 4415, 1983), (-525, 4322, 529), (297, 565, -1747), (1587, 521, -1897), (2703, 2042, 2884), (-1766, -3123, 555), (459, 2795, -1848), (475, 5306, -783), (-3263, 3001, -788), (-2971, 2990, -1845), (-472, -2913, 482), (405, 5272, 1925), (-1799, 4126, -1885), (1517, 5668, 1819), (3054, 3243, 601), (-1891, 1821, -756), (-608, -779, 712), (616, -1555, 510), (1560, 3064, 516), (1853, -419, -419), (-848, 3110, -1740), (-690, 1963, -869), (-1913, 4194, -3963), (-1960, -210, 634), (3024, 670, -1675), (-2959, 4393, 542), (2664, 2087, -792), (1520, 440, -3029), (-1304, 1388, 1100), (-2975, 4217, -2835), (2939, 578, -596), (1575, 4255, -521), (-1350, -1029, 2), (-1379, 2488, -6), (-2985, 5372, -1837), (-125, 1321, 87), (-1815, 3017, 757), (3025, 3108, 1801), (-2124, 4373, 802), (-1801, 2945, 728), (-3224, 5562, -444), (-507, 4332, 591), (-2989, 4274, 457), (1092, 3609, 1232), (-3089, 4260, -1909), (574, -1434, 552), (1736, 1878, -729), (-1920, 3010, -1570), (7, 2510, -1111), (-1862, 550, 1959), (622, 4543, 861), (797, 944, -790)}
    ans = 0
    for a in scanners:
        for b in scanners:
            x = abs(a[0]-b[0]) + abs(a[1]-b[1]) + abs(a[2]-b[2])
            if x > ans:
                print(a, b)
            ans = max(ans, x)
    print(ans)